<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>迁移到hyprland的体验</title>
      <link href="/2024/06/18/%E8%BF%81%E7%A7%BB%E5%88%B0hyprland%E7%9A%84%E4%BD%93%E9%AA%8C/"/>
      <url>/2024/06/18/%E8%BF%81%E7%A7%BB%E5%88%B0hyprland%E7%9A%84%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要转到-wayland？"><a href="#为什么要转到-wayland？" class="headerlink" title="为什么要转到 wayland？"></a>为什么要转到 wayland？</h2><p>刚开始实际上只是为了实现动态壁纸这一个功能，之前用的使用 i3wm，并没有找到合适的方法，直到看到了 <a href="https://github.com/GhostNaN/mpvpaper">mpvpaper</a>这个项目，发现实现起来相对于我之前所看到的方法来说简单很多，并且也早就听说了 wayland 的大名了，于是便开始动手了。</p><blockquote><p>有一说一，最打动我的还是 waydroid 之前就看到了 但是只能运行在 wayland 上，当然可以套个壳，但是太麻烦了</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用的是 hyprland，系统是 arch，arch 的安装就不再说了，hyprland 可以复制这条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S hyprland</span><br></pre></td></tr></table></figure><h2 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h2><p>主要使用的软件：<br>sddm（显示管理器）主题是 <a href="https://github.com/3ximus/abstractdark-sddm-theme">abstract</a><br>hyprpaper（壁纸）<br>mpvpaper（动态壁纸）<br>hyprlock（锁屏）<br>wlogout（电源菜单）<br>fuzzel（应用程序启动器）<br>waybar（状态栏）<br>kitty（终端）<br>mako（通知守护进程）</p><p>hyprpaper 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">preload = path</span><br><span class="line">wallpaper = 显示的屏幕, path</span><br><span class="line">ipc = off</span><br></pre></td></tr></table></figure><p>hyprlock 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">general &#123;</span><br><span class="line">    text-trim = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">background &#123;</span><br><span class="line">    monitor =</span><br><span class="line">    path = /home/$USER/Pictures/lock_bg.png </span><br><span class="line">    color = rgba(25, 20, 20, 1.0)</span><br><span class="line"></span><br><span class="line">    # all these options are taken from hyprland, see https://wiki.hyprland.org/Configuring/Variables/#blur for explanations</span><br><span class="line">    blur_passes = 1 # 0 disables blurring</span><br><span class="line">    blur_size = 4</span><br><span class="line">    noise = 0.0117</span><br><span class="line">    contrast = 0.8916</span><br><span class="line">    brightness = 0.8172</span><br><span class="line">    vibrancy = 0.1696</span><br><span class="line">    vibrancy_darkness = 0.0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input-field &#123;</span><br><span class="line">    monitor =</span><br><span class="line">    size = 250, 60</span><br><span class="line">    outline_thickness = 2</span><br><span class="line">    dots_size = 0.2 # Scale of input-field height, 0.2 - 0.8</span><br><span class="line">    dots_spacing = 0.2 # Scale of dots&#x27; absolute size, 0.0 - 1.0</span><br><span class="line">    dots_center = true</span><br><span class="line">    outer_color = rgba(0, 0, 0, 0)</span><br><span class="line">    inner_color = rgba(0, 0, 0, 0.5)</span><br><span class="line">    font_color = rgb(200, 200, 200)</span><br><span class="line">    fade_on_empty = false</span><br><span class="line">    font_family = JetBrains Mono Nerd Font Mono</span><br><span class="line">    placeholder_text = &lt;i&gt;&lt;span foreground=&quot;##cdd6f4&quot;&gt;Input Password...&lt;/span&gt;&lt;/i&gt;</span><br><span class="line">    hide_input = false</span><br><span class="line">    position = 0, -120</span><br><span class="line">    halign = center</span><br><span class="line">    valign = center</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">label &#123;</span><br><span class="line">    monitor =</span><br><span class="line">    text = cmd[update:1000] echo &quot;$(date +&quot;%H:%M:%S %A&quot;)&quot;</span><br><span class="line">    #color = $foreground</span><br><span class="line">    color = rgba(255, 255, 255, 0.6)</span><br><span class="line">    font_size = 120</span><br><span class="line">    font_family = JetBrains Mono Nerd Font Mono ExtraBold</span><br><span class="line">    position = 0, -300</span><br><span class="line">    halign = center</span><br><span class="line">    valign = top</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">label &#123;</span><br><span class="line">    monitor =</span><br><span class="line">    text = Hi there, $USER</span><br><span class="line">    #color = $foreground</span><br><span class="line">    color = rgba(255, 255, 255, 0.6)</span><br><span class="line">    font_size = 25</span><br><span class="line">    font_family = JetBrains Mono Nerd Font Mono</span><br><span class="line">    position = 0, -40</span><br><span class="line">    halign = center</span><br><span class="line">    valign = center</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">label &#123;</span><br><span class="line">    monitor =</span><br><span class="line">    text = cmd[update:1000] echo &quot;$(~/Documents/Scripts/whatsong.sh)&quot; </span><br><span class="line">    #color = $foreground</span><br><span class="line">    color = rgba(255, 255, 255, 0.6)</span><br><span class="line">    font_size = 18</span><br><span class="line">    font_family = JetBrainsMono, Font Awesome 6 Free Solid</span><br><span class="line">    position = 0, -50</span><br><span class="line">    halign = center</span><br><span class="line">    valign = bottom</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wlogout 使用的是默认配置，够用就行，那天有时间了在配置<br>fuzzel 开箱即用，很方便<br>waybar 配置<br>kitty 只配置了一个透明和模糊</p><p>模块的配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;spacing&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;modules-left&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;custom/launcher&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;hyprland/workspaces&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;hyprland/window&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;modules-right&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;memory&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;battery&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;backlight&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;pulseaudio&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;network#1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;network#2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;tray&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;clock&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// modules config</span></span><br><span class="line">    <span class="attr">&quot;hyprland/workspaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;name&#125;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hyprland/window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;title&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon-size&quot;</span><span class="punctuation">:</span> <span class="number">24</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clock&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;:%Y-%m-%d %H:%M:%S %A&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;memory&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;memory: &#123;used&#125;GiB&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;battery&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;bat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BAT0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;full_at&quot;</span><span class="punctuation">:</span> <span class="number">96</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BT: &#123;capacity&#125;%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tray&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;icon-size&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;spacing&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pulseaudio&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;voice: &#123;volume&#125;%&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format-muted&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MUTE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format-bluetooth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BTvoice: &#123;volume&#125;%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;network#1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;interface&quot;</span><span class="punctuation">:</span> <span class="string">&quot;enp47s0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format-ethernet&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;ipaddr&#125;/&#123;cidr&#125;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;netmork#2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;interface&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wlp45s0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format-wifi&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;ifname&#125; &#123;signalStrength&#125;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;backlight&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;device&quot;</span><span class="punctuation">:</span> <span class="string">&quot;intel_backlight&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BL: &#123;percent&#125;%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;custom/launcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\udb82\udcc7&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;on-click&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fuzzel&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;on-click-right&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fuzzel&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>样式的配置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: LXGWWenKaiScreen, Roboto, Helvetica, Arial, sans-serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">window<span class="selector-id">#waybar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">55</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">3px</span> solid <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">114</span>, <span class="number">125</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: background-color;</span><br><span class="line">    <span class="attribute">transition-duration</span>: .<span class="number">5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.modules-left</span>,</span><br><span class="line"><span class="selector-class">.modules-center</span>,</span><br><span class="line"><span class="selector-class">.modules-right</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">3px</span> transparent;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: inherit;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">3px</span> <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#workspaces</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#workspaces</span> <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: lightslategray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#workspaces</span> <span class="selector-tag">button</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">3px</span> <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#workspaces</span> <span class="selector-tag">button</span><span class="selector-class">.urgent</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightsalmon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#mode</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#64727D</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">3px</span> <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#battery</span>,</span><br><span class="line"><span class="selector-id">#cpu</span>,</span><br><span class="line"><span class="selector-id">#memory</span>,</span><br><span class="line"><span class="selector-id">#network</span>,</span><br><span class="line"><span class="selector-id">#pulseaudio</span>,</span><br><span class="line"><span class="selector-id">#tray</span>,</span><br><span class="line"><span class="selector-id">#network</span>,</span><br><span class="line"><span class="selector-id">#clock</span>,</span><br><span class="line"><span class="selector-id">#mode</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#custom-launcher</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#clock</span> &#123;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hyprland 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line"># #######################################################################################</span><br><span class="line"># AUTOGENERATED HYPR CONFIG.</span><br><span class="line"># PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,</span><br><span class="line"># OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.</span><br><span class="line"># #######################################################################################</span><br><span class="line"></span><br><span class="line"># autogenerated = 1 # remove this line to remove the warning</span><br><span class="line"></span><br><span class="line"># This is an example Hyprland config file.</span><br><span class="line"># Refer to the wiki for more information.</span><br><span class="line"># https://wiki.hyprland.org/Configuring/Configuring-Hyprland/</span><br><span class="line"></span><br><span class="line"># Please note not all available settings / options are set here.</span><br><span class="line"># For a full list, see the wiki</span><br><span class="line"></span><br><span class="line"># You can split this configuration into multiple files</span><br><span class="line"># Create your files separately and then link them to this file like this:</span><br><span class="line"># source = ~/.config/hypr/myColors.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################</span><br><span class="line">### MONITORS ###</span><br><span class="line">################</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Monitors/</span><br><span class="line">monitor=,preferred,auto,auto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###################</span><br><span class="line">### MY PROGRAMS ###</span><br><span class="line">###################</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Keywords/</span><br><span class="line"></span><br><span class="line"># Set programs that you use</span><br><span class="line">$terminal = kitty</span><br><span class="line">$fileManager = nemo</span><br><span class="line">$menu = fuzzel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#################</span><br><span class="line">### AUTOSTART ###</span><br><span class="line">#################</span><br><span class="line"></span><br><span class="line"># Autostart necessary processes (like notifications daemons, status bars, etc.)</span><br><span class="line"># Or execute your favorite apps at launch like this:</span><br><span class="line"></span><br><span class="line"># exec-once = $terminal</span><br><span class="line">exec-once = nm-applet &amp;</span><br><span class="line">exec-once = waybar &amp;</span><br><span class="line"></span><br><span class="line">exec-once = [workspace 1 silent] firefox</span><br><span class="line">exec-once = [workspace 10 silent] qbittorrent</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"></span><br><span class="line">exec-once = fcitx5 -d</span><br><span class="line">exec-once = hyprpaper</span><br><span class="line">exec-once = udiskie &amp;</span><br><span class="line">exec-once = swayidle -w timeout 1800 &#x27;hyprlock&#x27;</span><br><span class="line">exec-once = /usr/lib/polkit-kde-authentication-agent-1</span><br><span class="line">exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP</span><br><span class="line">exec-once = waydroid session start</span><br><span class="line">exec-once = blueman-applet</span><br><span class="line"></span><br><span class="line">#############################</span><br><span class="line">### ENVIRONMENT VARIABLES ###</span><br><span class="line">#############################</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Environment-variables/</span><br><span class="line"></span><br><span class="line">env = HYPRCURSOR_THEME,rose-pine-hyprcursor</span><br><span class="line">env = XCURSOR_SIZE,24</span><br><span class="line">env = HYPRCURSOR_SIZE,24</span><br><span class="line"></span><br><span class="line">env = GDK_BACKEND,wayland,x11,*</span><br><span class="line">env = QT_QPA_PLATFORM,wayland;xcb</span><br><span class="line">env = SDL_VIDEODRIVER,wayland</span><br><span class="line"></span><br><span class="line">env = QT_AUTO_SCREEN_SCALE_FACTOR,1</span><br><span class="line">env = QT_QPA_PLATFORM,wayland;xcb</span><br><span class="line">env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1</span><br><span class="line"></span><br><span class="line">#####################</span><br><span class="line">### LOOK AND FEEL ###</span><br><span class="line">#####################</span><br><span class="line"></span><br><span class="line"># Refer to https://wiki.hyprland.org/Configuring/Variables/</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#general</span><br><span class="line">general &#123; </span><br><span class="line">    gaps_in = 5</span><br><span class="line">    gaps_out = 5</span><br><span class="line"></span><br><span class="line">    border_size = 1</span><br><span class="line"></span><br><span class="line">    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors</span><br><span class="line">    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg</span><br><span class="line">    col.inactive_border = rgba(595959aa)</span><br><span class="line"></span><br><span class="line">    # Set to true enable resizing windows by clicking and dragging on borders and gaps</span><br><span class="line">    resize_on_border = false </span><br><span class="line"></span><br><span class="line">    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on</span><br><span class="line">    allow_tearing = false</span><br><span class="line"></span><br><span class="line">    layout = dwindle</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#decoration</span><br><span class="line">decoration &#123;</span><br><span class="line">    rounding = 4</span><br><span class="line"></span><br><span class="line">    # Change transparency of focused and unfocused windows</span><br><span class="line">    active_opacity = 1.0</span><br><span class="line">    inactive_opacity = 1.0</span><br><span class="line"></span><br><span class="line">    drop_shadow = false</span><br><span class="line">    shadow_range = 4</span><br><span class="line">    shadow_render_power = 3</span><br><span class="line">    col.shadow = rgba(1a1a1aee)</span><br><span class="line"></span><br><span class="line">    # https://wiki.hyprland.org/Configuring/Variables/#blur</span><br><span class="line">    blur &#123;</span><br><span class="line">        enabled = true</span><br><span class="line">        size = 5</span><br><span class="line">        passes = 1</span><br><span class="line">        </span><br><span class="line">        vibrancy = 0.1696</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#animations</span><br><span class="line">animations &#123;</span><br><span class="line">    enabled = true</span><br><span class="line">    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more</span><br><span class="line">    bezier = myBezier, 0.05, 0.9, 0.1, 1.05</span><br><span class="line">    animation = windows, 1, 7, myBezier</span><br><span class="line">    animation = windowsOut, 1, 7, default, popin 80%</span><br><span class="line">    animation = border, 1, 10, default</span><br><span class="line">    animation = borderangle, 1, 8, default</span><br><span class="line">    animation = fade, 1, 7, default</span><br><span class="line">    animation = workspaces, 1, 6, default</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more</span><br><span class="line">dwindle &#123;</span><br><span class="line">    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below</span><br><span class="line">    preserve_split = true # You probably want this</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Master-Layout/ for more</span><br><span class="line">master &#123;</span><br><span class="line">    new_is_master = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#misc</span><br><span class="line">misc &#123; </span><br><span class="line">    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers</span><br><span class="line">    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#############</span><br><span class="line">### INPUT ###</span><br><span class="line">#############</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#input</span><br><span class="line">input &#123;</span><br><span class="line">    kb_layout = us</span><br><span class="line">    kb_variant =</span><br><span class="line">    kb_model =</span><br><span class="line">    kb_options =</span><br><span class="line">    kb_rules =</span><br><span class="line"></span><br><span class="line">    follow_mouse = 1</span><br><span class="line"></span><br><span class="line">    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.</span><br><span class="line"></span><br><span class="line">    touchpad &#123;</span><br><span class="line">        natural_scroll = false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># https://wiki.hyprland.org/Configuring/Variables/#gestures</span><br><span class="line">gestures &#123;</span><br><span class="line">    workspace_swipe = false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Example per-device config</span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more</span><br><span class="line">device &#123;</span><br><span class="line">    name = epic-mouse-v1</span><br><span class="line">    sensitivity = -0.5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">####################</span><br><span class="line">### KEYBINDINGSS ###</span><br><span class="line">####################</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Keywords/</span><br><span class="line">$mainMod = SUPER # Sets &quot;Windows&quot; key as main modifier</span><br><span class="line"></span><br><span class="line"># Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more</span><br><span class="line">bind = $mainMod, Q, exec, $terminal</span><br><span class="line">bind = $mainMod, C, killactive,</span><br><span class="line">bind = $mainMod, M, exit,</span><br><span class="line">bind = $mainMod, E, exec, $fileManager</span><br><span class="line">bind = $mainMod, V, togglefloating,</span><br><span class="line">bind = $mainMod, R, exec, $menu</span><br><span class="line">bind = $mainMod, P, pseudo, # dwindle</span><br><span class="line">bind = $mainMod, J, togglesplit, # dwindle</span><br><span class="line"></span><br><span class="line"># Move focus with mainMod + arrow keys</span><br><span class="line">bind = $mainMod, left, movefocus, l</span><br><span class="line">bind = $mainMod, right, movefocus, r</span><br><span class="line">bind = $mainMod, up, movefocus, u</span><br><span class="line">bind = $mainMod, down, movefocus, d</span><br><span class="line"></span><br><span class="line"># Switch workspaces with mainMod + [0-9]</span><br><span class="line">bind = $mainMod, 1, workspace, 1</span><br><span class="line">bind = $mainMod, 2, workspace, 2</span><br><span class="line">bind = $mainMod, 3, workspace, 3</span><br><span class="line">bind = $mainMod, 4, workspace, 4</span><br><span class="line">bind = $mainMod, 5, workspace, 5</span><br><span class="line">bind = $mainMod, 6, workspace, 6</span><br><span class="line">bind = $mainMod, 7, workspace, 7</span><br><span class="line">bind = $mainMod, 8, workspace, 8</span><br><span class="line">bind = $mainMod, 9, workspace, 9</span><br><span class="line">bind = $mainMod, 0, workspace, 10</span><br><span class="line"></span><br><span class="line"># Move active window to a workspace with mainMod + SHIFT + [0-9]</span><br><span class="line">bind = $mainMod SHIFT, 1, movetoworkspace, 1</span><br><span class="line">bind = $mainMod SHIFT, 2, movetoworkspace, 2</span><br><span class="line">bind = $mainMod SHIFT, 3, movetoworkspace, 3</span><br><span class="line">bind = $mainMod SHIFT, 4, movetoworkspace, 4</span><br><span class="line">bind = $mainMod SHIFT, 5, movetoworkspace, 5</span><br><span class="line">bind = $mainMod SHIFT, 6, movetoworkspace, 6</span><br><span class="line">bind = $mainMod SHIFT, 7, movetoworkspace, 7</span><br><span class="line">bind = $mainMod SHIFT, 8, movetoworkspace, 8</span><br><span class="line">bind = $mainMod SHIFT, 9, movetoworkspace, 9</span><br><span class="line">bind = $mainMod SHIFT, 0, movetoworkspace, 10</span><br><span class="line"></span><br><span class="line"># Example special workspace (scratchpad)</span><br><span class="line">bind = $mainMod, S, togglespecialworkspace, magic</span><br><span class="line">bind = $mainMod SHIFT, S, movetoworkspace, special:magic</span><br><span class="line"></span><br><span class="line"># Scroll through existing workspaces with mainMod + scroll</span><br><span class="line">bind = $mainMod, mouse_down, workspace, e+1</span><br><span class="line">bind = $mainMod, mouse_up, workspace, e-1</span><br><span class="line"></span><br><span class="line"># Move/resize windows with mainMod + LMB/RMB and dragging</span><br><span class="line">bindm = $mainMod, mouse:272, movewindow</span><br><span class="line">bindm = $mainMod, mouse:273, resizewindow</span><br><span class="line"></span><br><span class="line"># lock </span><br><span class="line">bind = $mainMod, l, exec, hyprlock</span><br><span class="line"></span><br><span class="line"># 电源菜单</span><br><span class="line">bind = $mainMod SHIFT, L, exec, wlogout</span><br><span class="line"></span><br><span class="line"># 截图</span><br><span class="line">bind = $mainMod, s, exec, grim -g &quot;$(slurp)&quot; $(xdg-user-dir PICTURES)/temp/$(date +&#x27;%s_grim.png&#x27;)  &amp;&amp; notify-send &quot;添加了一个截图&quot; &quot;在 Pictures/temp 文件夹下&quot;</span><br><span class="line"></span><br><span class="line"># 亮度控制 </span><br><span class="line">bind = , XF86MonBrightnessDown, exec, light -U 1</span><br><span class="line">bind = , XF86MonBrightnessUp, exec, light -A 1</span><br><span class="line"></span><br><span class="line"># 声音控制</span><br><span class="line">bind = , XF86AudioMute, exec, amixer -q -D pulse sset Master toggle</span><br><span class="line">bind = , XF86AudioRaiseVolume, exec, amixer -q -D pulse sset Master 1%+ unmute</span><br><span class="line">bind = , XF86AudioLowerVolume, exec, amixer -q -D pulse sset Master 1%- unmute</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################</span><br><span class="line">### WINDOWS AND WORKSPACES ###</span><br><span class="line">##############################</span><br><span class="line"></span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Window-Rules/ for more</span><br><span class="line"># See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules</span><br><span class="line"></span><br><span class="line"># Example windowrule v1</span><br><span class="line"># windowrule = float, ^(kitty)$</span><br><span class="line"></span><br><span class="line"># Example windowrule v2</span><br><span class="line"># windowrulev2 = float,class:^(kitty)$,title:^(kitty)$</span><br><span class="line"></span><br><span class="line">windowrulev2 = suppressevent maximize, class:.* # You&#x27;ll probably like this.</span><br><span class="line"></span><br><span class="line"># unscale XWayland</span><br><span class="line">xwayland &#123;</span><br><span class="line">  force_zero_scaling = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># toolkit-specific scale</span><br><span class="line">env = GDK_SCALE,2</span><br><span class="line">env = XCURSOR_SIZE,32</span><br></pre></td></tr></table></figure><p>设置一些 xwayland 运行的应用在 wayland 下运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">env = HYPRCURSOR_THEME,rose-pine-hyprcursor</span><br><span class="line">env = XCURSOR_SIZE,24</span><br><span class="line">env = HYPRCURSOR_SIZE,24</span><br><span class="line"></span><br><span class="line">env = GDK_BACKEND,wayland,x11,*</span><br><span class="line">env = QT_QPA_PLATFORM,wayland;xcb</span><br><span class="line">env = SDL_VIDEODRIVER,wayland</span><br><span class="line"></span><br><span class="line">env = QT_AUTO_SCREEN_SCALE_FACTOR,1</span><br><span class="line">env = QT_QPA_PLATFORM,wayland;xcb</span><br><span class="line">env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1</span><br></pre></td></tr></table></figure><p>设置 electron 应用使用 wayland<br><code>PATH: .config/electron-flags.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--enable-features=UseOzonePlatform</span><br><span class="line">--ozone-platform=wayland</span><br></pre></td></tr></table></figure><blockquote><p>vscode 无法使用 fcitx5，可以在使用时添加 <code>--enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime</code>，当然也可以编辑<code>/usr/share/applications/code.desktop</code>这个文件</p></blockquote><h2 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h2><p>hyprland 有着相对 i3wm 来说过有着直接能用的动画，不像 i3wm 需要使用 picom 来实现动画，以及 waydroid 实在是方便<br>个人认为 wayland 相对于 x11 来说，wayland 还是有很多问题没有解决，比如 nvidia, 在比如 steam 游戏我无法启动（但这样也挺好，我学习一般在 hyprland 下面，游戏在xfce 下面）</p><p>最后还是安顿在 xfce4 上面了，从 1月份的 i3wm 和最近几天的 hyprland 发现多少都有些问题。还是 xfce4 好用些。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记</title>
      <link href="/2024/05/27/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/27/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h2 id="1-变量-常量"><a href="#1-变量-常量" class="headerlink" title="1 变量 &amp; 常量"></a>1 变量 &amp; 常量</h2><p>声明变量可以使用以下格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[数据结构] [变量名]</span><br></pre></td></tr></table></figure><p>声明常量可以使用<code>final</code>关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// 变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 常量</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><h3 id="2-1-整数类型"><a href="#2-1-整数类型" class="headerlink" title="2.1 整数类型"></a>2.1 整数类型</h3><ul><li>byte 字节型 （8个bit，也就是1个字节）范围：-128~+127</li><li>short 短整形（16个bit，也就是2个字节）范围：-32768~+32767</li><li>int 整形（32个bit，也就是4个字节）最常用的类型：-2147483648 ~ +2147483647</li><li>long 长整形（64个bit，也就是8个字节）范围：-9223372036854775808 ~ +9223372036854775807<br>小的可以传递给大的，反之则报错<blockquote><p>在使用<code>long</code>时，需要在值后面添加，大写或者小写的<code>l</code><br>十六进制要在开头前添加<code>0x</code><br>八进制要在开头前添加<code>0</code></p></blockquote></li></ul><h3 id="2-2-浮点类型"><a href="#2-2-浮点类型" class="headerlink" title="2.2 浮点类型"></a>2.2 浮点类型</h3><ul><li>float 单精度浮点型 （32bit，4字节）</li><li>double 双精度浮点型（64bit，8字节）</li></ul><blockquote><p>在使用<code>float</code>时，需要在值的后边添加大写或者小写的<code>f</code></p></blockquote><h3 id="2-3-字符类型"><a href="#2-3-字符类型" class="headerlink" title="2.3 字符类型"></a>2.3 字符类型</h3><ul><li>char 字符型（16个bit，也就是2字节，它不带符号）范围是0 ~ 65535 字符常量的需要使用<strong>单引号</strong>包围，且内部只能有一个字符</li></ul><p>需要使用多个字符的时候需要使用String</p><h3 id="2-4-布尔类型"><a href="#2-4-布尔类型" class="headerlink" title="2.4 布尔类型"></a>2.4 布尔类型</h3><ul><li>true - 真</li><li>false - 假</li></ul><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3 运算符"></a>3 运算符</h2><p>与其余编程语言大差不差</p><h2 id="4-流程控制"><a href="#4-流程控制" class="headerlink" title="4 流程控制"></a>4 流程控制</h2><h3 id="4-1-代码块与作用域"><a href="#4-1-代码块与作用域" class="headerlink" title="4.1 代码块与作用域"></a>4.1 代码块与作用域</h3><p>被大括号括起来的就是块（代码块） 变量的适用范围仅限于声明时所在的块，这叫做变量的作用域</p><h3 id="4-2选择语句"><a href="#4-2选择语句" class="headerlink" title="4.2选择语句"></a>4.2选择语句</h3><h4 id="4-2-1-if"><a href="#4-2-1-if" class="headerlink" title="4.2.1 if"></a>4.2.1 if</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">    System.out.println(<span class="string">&quot;输入一个整数数字：&quot;</span>);  </span><br><span class="line">    num = scanner.nextInt();  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;这个变量是0&quot;</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;这个数字是负数&quot;</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;这个数字是：&quot;</span> + num);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;Administrator</span><br></pre></td></tr></table></figure><h4 id="4-2-2switch"><a href="#4-2-2switch" class="headerlink" title="4.2.2switch"></a>4.2.2switch</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">System.out.println(<span class="string">&quot;输入一个整数数字：&quot;</span>);  </span><br><span class="line">num = scanner.nextInt();  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">switch</span> (num) &#123;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span> :  </span><br><span class="line">        System.out.println(<span class="string">&quot;数字是0&quot;</span>);  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span> :  </span><br><span class="line">        System.out.println(<span class="string">&quot;数字是1&quot;</span>);  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> -<span class="number">1</span> :  </span><br><span class="line">        System.out.println(<span class="string">&quot;数字是-1&quot;</span>);  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">default</span>:  </span><br><span class="line">        System.out.println(<span class="string">&quot;请输入0，1，-1 这三个数字&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-循环语句"><a href="#4-3-循环语句" class="headerlink" title="4.3 循环语句"></a>4.3 循环语句</h3><h4 id="4-3-1-while"><a href="#4-3-1-while" class="headerlink" title="4.3.1 while"></a>4.3.1 while</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">while</span> (num &lt; <span class="number">10</span>) &#123;  </span><br><span class="line">        System.out.println(num);  </span><br><span class="line">        num++;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2-for"><a href="#4-3-2-for" class="headerlink" title="4.3.2 for"></a>4.3.2 for</h4><p><code>for(表达式1, 表达式2, 表达式3)</code></p><ul><li>表达式1，在循环开始时，只执行一次</li><li>表达式2，判断语句</li><li>表达式3，在一次循环结束后执行一次<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;  </span><br><span class="line">        System.out.println(i);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-3-do-while"><a href="#4-3-3-do-while" class="headerlink" title="4.3.3 do - while"></a>4.3.3 do - while</h4><p>先执行一次循环体里的代码，在进行判断，无论咋样循环体里的代码至少会执行一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">do</span> &#123;  </span><br><span class="line">        System.out.println(i);  </span><br><span class="line">        i++;  </span><br><span class="line">    &#125; <span class="keyword">while</span> (i &lt; <span class="number">10</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-4-break-continue"><a href="#4-3-4-break-continue" class="headerlink" title="4.3.4 break &amp; continue"></a>4.3.4 break &amp; continue</h4><p><code>break</code>表示跳出当前循环<br><code>continue</code>表示跳出当前循环，直接执行下次循环</p><h2 id="5-访问控制"><a href="#5-访问控制" class="headerlink" title="5 访问控制"></a>5 访问控制</h2><ul><li><code>private</code> - 私有，标记为私有的内容<strong>无法被除当前类以外的任何位置访问</strong>。</li><li><code>什么都不写</code> - 默认，默认情况下，只能被<strong>类本身和同包中</strong>的其他类访问。</li><li><code>protected</code> - 受保护，标记为受保护的内容可以能被<strong>类本身和同包中的其他类访问，也可以被子类访问</strong></li><li><code>public</code> - 公共，标记为公共的内容，<strong>允许在任何地方被访问</strong>。</li></ul><h2 id="6-类与对象"><a href="#6-类与对象" class="headerlink" title="6 类与对象"></a>6 类与对象</h2><p>创建对象需要使用<code>new</code>关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;name1&quot;</span>, <span class="number">12</span>, <span class="string">&#x27;男&#x27;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以使用<code>.</code>运算符，来使用对象的属性与方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;name1&quot;</span>, <span class="number">12</span>, <span class="string">&#x27;男&#x27;</span>);  </span><br><span class="line">    System.out.println(person1.name);  </span><br><span class="line">    System.out.println(person1.getName());  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在创建方法的时候要是没有返回值可以使用<code>void</code>表示<br>想要在方法中改变对象的值，可以使用<code>this</code>关键字，<code>this</code>相当于当先对象本身</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;  </span><br><span class="line">    <span class="built_in">this</span>.name = name;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-1构造方法"><a href="#6-1构造方法" class="headerlink" title="6.1构造方法"></a>6.1构造方法</h3><p>使用<code>new</code>关键字创建的对象的属性的值都是默认的，想要在创建时自定义属性，可以使用构造方法<br>构造方法的名字和类名相同，并且不需要写返回值，<strong>构造方法会在调用new关键字时只运行一次</strong>，会覆盖掉默认无参构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> String name;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> gender;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">char</span> gender)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.name = name;  </span><br><span class="line">        <span class="built_in">this</span>.age = age;  </span><br><span class="line">        <span class="built_in">this</span>.gender = gender;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-静态属性-静态方法"><a href="#6-2-静态属性-静态方法" class="headerlink" title="6.2 静态属性 &amp; 静态方法"></a>6.2 静态属性 &amp; 静态方法</h3><p>可以通过<code>static</code>关键字来声明静态属性与静态方法<br>一般情况下我们使用<code>类名.属性/方法</code>的形式来使用静态属性或静态方法</p><p>静态属性或静态方法可以理解为是这个类所有的属性或方法，所有基于这个类创建的对象都可以访问到，要是其中有一个对象改变了静态属性的值，那么其他对象读到的就是修改的值</p><h3 id="6-3-包"><a href="#6-3-包" class="headerlink" title="6.3 包"></a>6.3 包</h3><p>所处包和对应目录是一一对应的，需要使用其他包里的类是，需要使用<code>import</code>导入才能使用<br>如果一个包中有多个类可以使用<code>*</code>表示导入这个包中的全部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.test.testClass.test1;</span><br><span class="line"><span class="keyword">import</span> com.test.testClass.test2.*;</span><br></pre></td></tr></table></figure><h3 id="6-4-方法重载"><a href="#6-4-方法重载" class="headerlink" title="6.4 方法重载"></a>6.4 方法重载</h3><p>如果有一系列方法，他们功能相似，但是参数不同，那么可以把这组方法作为同名方法<br>这种方法名相同，但是各自参数不同，成为方法重载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> num1 + num2;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> num1 + num2;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(sum(<span class="number">1</span>, <span class="number">2</span>));  </span><br><span class="line">    System.out.println(sum(<span class="number">1.2</span>, <span class="number">2.2</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-5-封装，继承，多态"><a href="#6-5-封装，继承，多态" class="headerlink" title="6.5 封装，继承，多态"></a>6.5 封装，继承，多态</h3><h4 id="6-5-1-封装"><a href="#6-5-1-封装" class="headerlink" title="6.5.1 封装"></a>6.5.1 封装</h4><p>将对象内部的属性和方法封装起来，对客户隐藏具体实现细节<br>封装的思想保证了类内部数据的完整性，避免了外部操作对内部数据的影响</p><h4 id="6-5-2-继承"><a href="#6-5-2-继承" class="headerlink" title="6.5.2 继承"></a>6.5.2 继承</h4><p>继承使用<code>extends</code>关键字，语法为<code>class 子类名 extends 父类名</code><br>只支持单继承，即一个类<strong>只能</strong>有一个子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> String name;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Worker</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;正在工作...&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类的继承可以不断继承下去，单同时只能继承一个类，<strong>同时如果添加了<code>final</code>的类不允许被继承</strong><br>如果父类存在有参构造方法，子类必须在构造方法中调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> String name;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.name = name;  </span><br><span class="line">        <span class="built_in">this</span>.age = age;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> name;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.name = name;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> age;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.age = age;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Worker</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Worker</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;  </span><br><span class="line">        <span class="built_in">super</span>(name, age);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;正在工作...&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">Worker</span> <span class="variable">worker1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;name1&quot;</span>, <span class="number">12</span>);  </span><br><span class="line">    worker1.work();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要判断变量所应用的对象是什么类可以使用<code>instanceof</code>，如果变量所引用的对象<strong>是对应类型或是对应类型的子类</strong>，那么<code>instanceof</code>都会返回<code>true</code>，否则返回<code>false</code>。语法：<code>变量 instanceof 类名</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Person 和 Worker 类的定义与与上面的相同</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">Worker</span> <span class="variable">worker1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;name1&quot;</span>, <span class="number">12</span>);  </span><br><span class="line">    worker1.work();  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (worker1 <span class="keyword">instanceof</span> Worker) System.out.println(<span class="string">&quot;true&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子类是可以定义与父类相同名字的属性的，可以数用super表示父类，来访问父类的变量</p><h4 id="6-5-3-Object类"><a href="#6-5-3-Object类" class="headerlink" title="6.5.3 Object类"></a>6.5.3 Object类</h4><p>Object是特殊的类，java中所有类都简介或者直接的继承了Object类<br> 可以重写Object类</p><h4 id="6-5-4-多态"><a href="#6-5-4-多态" class="headerlink" title="6.5.4 多态"></a>6.5.4 多态</h4><p>不同类型的对象对同一消息做出响应</p><h4 id="6-5-6-抽象类"><a href="#6-5-6-抽象类" class="headerlink" title="6.5.6 抽象类"></a>6.5.6 抽象类</h4><p>使用<code>abstract</code>关键字创建一个抽象类<br>抽象类<strong>无法对其使用<code>new</code>关键字</strong>，子类必须实现抽象类中的所有抽象方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Worker</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;  </span><br><span class="line"><span class="comment">//    子类实现父类的方法</span></span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;工作中...&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">Worker</span> <span class="variable">worker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>();  </span><br><span class="line">    worker.work();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-5-7-接口"><a href="#6-5-7-接口" class="headerlink" title="6.5.7 接口"></a>6.5.7 接口</h4><p>使用<code>interface</code>声明一个接口<br>当具体的一个类在实现一个接口的时候需要使用<code>implements</code>关键字，并且<strong>可以实现多个接口</strong></p><p><strong>接口是可以使用继承的，相当于扩展了原来接口的功能</strong></p><p><code>default</code>关键字可以使实现类不再覆写方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    接口  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Test1</span> &#123;  </span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">runTest1</span><span class="params">()</span>;  </span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">runTest2</span><span class="params">()</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//    接口的继承  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Test2</span> <span class="keyword">extends</span> <span class="title class_">Test1</span> &#123;  </span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">runTest3</span><span class="params">()</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//    接口实现  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TestClass</span> <span class="keyword">implements</span> <span class="title class_">Test2</span> &#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">runTest3</span><span class="params">()</span> &#123;  </span><br><span class="line">            System.out.println(<span class="string">&quot;running 3...&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">runTest1</span><span class="params">()</span> &#123;  </span><br><span class="line">            System.out.println(<span class="string">&quot;running 1...&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">runTest2</span><span class="params">()</span> &#123;  </span><br><span class="line">            System.out.println(<span class="string">&quot;running 2...&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">        <span class="type">TestClass</span> <span class="variable">testClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestClass</span>();  </span><br><span class="line">        testClass.runTest1();  </span><br><span class="line">        testClass.runTest2();  </span><br><span class="line">        testClass.runTest3();  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-内部类"><a href="#6-6-内部类" class="headerlink" title="6.6 内部类"></a>6.6 内部类</h3><p>定义在另一个类中的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;  </span><br><span class="line">    <span class="comment">// 定义了一个内部类</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类不能单独存在，必须依附外部类的实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;张三&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> name;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;  </span><br><span class="line">            System.out.println(<span class="string">&quot;Hi &quot;</span> + getName());  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">test</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">test</span>();  </span><br><span class="line">    test.<span class="type">test1</span> <span class="variable">testInner</span> <span class="operator">=</span> test.<span class="keyword">new</span> <span class="title class_">test1</span>();  </span><br><span class="line">  </span><br><span class="line">    System.out.println(test.getName());  </span><br><span class="line">    testInner.say();  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-6-1-成员内部类"><a href="#6-6-1-成员内部类" class="headerlink" title="6.6.1 成员内部类"></a>6.6.1 成员内部类</h4><p>写在成员的位置，属于外部类的成员之一</p><blockquote><p>JDK 16 之后可以定义静态变量</p></blockquote><h4 id="6-6-2-静态内部类"><a href="#6-6-2-静态内部类" class="headerlink" title="6.6.2 静态内部类"></a>6.6.2 静态内部类</h4><p><strong>静态内部类只能访问外部类的静态属性与方法</strong>，想要访问其他属性需要创建对象</p><h4 id="6-6-3-局部内部类"><a href="#6-6-3-局部内部类" class="headerlink" title="6.6.3 局部内部类"></a>6.6.3 局部内部类</h4><p>将内部类定义在方法中，就是局部内部类<br>外界无法直接使用局部内部类</p><h4 id="6-6-4-匿名内部类"><a href="#6-6-4-匿名内部类" class="headerlink" title="6.6.4 匿名内部类"></a>6.6.4 匿名内部类</h4><p>隐藏了名字的内部类，格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 类名或者接口名() &#123;</span><br><span class="line">重写方法;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-7-核心类"><a href="#6-7-核心类" class="headerlink" title="6.7 核心类"></a>6.7 核心类</h3><h4 id="6-7-1-String"><a href="#6-7-1-String" class="headerlink" title="6.7.1 String"></a>6.7.1 String</h4><p><code>String</code>是一个引用类型，本身为<code>class</code>，最重要特点就是字符串<strong>不可变</strong></p><h5 id="6-7-1-1-比较"><a href="#6-7-1-1-比较" class="headerlink" title="6.7.1.1 比较"></a>6.7.1.1 比较</h5><p>比较两个字符串是否相同时，应该使用<code>equals()</code>这个方法<br>忽略大小写可以使用<code>equalsIgnoreCase()</code>这个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string1</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string2</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string3</span> <span class="operator">=</span> <span class="string">&quot;test1&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(string1.equals(string2));  </span><br><span class="line">    System.out.println(string1.equals(string3));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-7-1-2-更多方法"><a href="#6-7-1-2-更多方法" class="headerlink" title="6.7.1.2 更多方法"></a>6.7.1.2 更多方法</h5><p>检测某个字符串是否包含某个字符串用<code>contains()</code>这个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(string.contains(<span class="string">&quot;t&quot;</span>));  </span><br><span class="line">    System.out.println(string.contains(<span class="string">&quot;a&quot;</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回某个字符在字符串中的索引（从零开始）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;  </span><br><span class="line">    System.out.println(string.indexOf(<span class="string">&#x27;e&#x27;</span>));  <span class="comment">// 1</span></span><br><span class="line">    System.out.println(string.lastIndexOf(<span class="string">&#x27;l&#x27;</span>));  <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查字符串是否以xxx开头或者结尾</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;  </span><br><span class="line">    System.out.println(string.startsWith(<span class="string">&quot;h&quot;</span>)); <span class="comment">// 检查开头  </span></span><br><span class="line">    System.out.println(string.endsWith(<span class="string">&quot;lo&quot;</span>));  <span class="comment">// 检查结尾</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>substring()</code>来截取字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;  </span><br><span class="line">    System.out.println(string.substring(<span class="number">1</span>, <span class="number">4</span>));  <span class="comment">// llo</span></span><br><span class="line">    System.out.println(string.substring(<span class="number">3</span>));  <span class="comment">// lo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>trim()</code>清除字符串首尾的空格字符串（该方法是返回立刻一个新的字符串）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;  \n \t test \n\t&quot;</span>;  </span><br><span class="line">    System.out.println(string);  </span><br><span class="line">    System.out.println(string.trim());  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>strip()</code>也可以清除字符串首尾的空格字符串，但是可以清楚类似中文空格也可以清除<br><code>stripLeading()</code>清除字符串后<br><code>stripTrailing()</code>清除字符串前</p><p><code>isEmpty()</code>和<code>isBlank()</code>来判断字符串是否为空和空白字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(<span class="string">&quot;&quot;</span>.isEmpty());  <span class="comment">// t</span></span><br><span class="line">    System.out.println(<span class="string">&quot; &quot;</span>.isEmpty());  <span class="comment">// f</span></span><br><span class="line">    System.out.println(<span class="string">&quot;asdf&quot;</span>.isBlank());  <span class="comment">// f</span></span><br><span class="line">    System.out.println(<span class="string">&quot;\n&quot;</span>.isBlank());  <span class="comment">// t</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>替换字符串，根据字符替换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>.replace(<span class="string">&quot;ll&quot;</span>, <span class="string">&quot;o&quot;</span>));  </span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>.replace(<span class="string">&quot;o&quot;</span>, <span class="string">&quot;asdf&quot;</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以使用正则表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">System.out.println(<span class="string">&quot;hello&quot;</span>.replaceAll(正则表达式)); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分割字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(<span class="string">&quot;Hello&quot;</span>.split(正则表达式));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拼接字符串，<code>join()</code> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    String[] test = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>&#125;;  </span><br><span class="line">    System.out.println(String.join(<span class="string">&quot;. &quot;</span>, test));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>格式化字符串<code>formatted()</code>方法和<code>format()</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="string">&quot;Hi, My name is %s, I&#x27;m %d&quot;</span>;  </span><br><span class="line">    System.out.println(string.formatted(<span class="string">&quot;name&quot;</span>, <span class="number">12</span>));  </span><br><span class="line">    System.out.println(String.format(<span class="string">&quot;this is a number: %.2f&quot;</span>, <span class="number">43.212</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>格式转换，可以使用<code>valueOf()</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(String.valueOf(<span class="number">123</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>string</code>和<code>char[]</code>是可以相互转化的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">char</span>[] test = <span class="string">&quot;test&quot;</span>.toCharArray();  </span><br><span class="line">    <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(test);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; test.length; i++) &#123;  </span><br><span class="line">        System.out.println(test[i]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    System.out.println(string);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-7-2-StringBuilder"><a href="#6-7-2-StringBuilder" class="headerlink" title="6.7.2. StringBuilder"></a>6.7.2. StringBuilder</h4><p>可以看作容器，<strong>创建后内容可变</strong><br>常用方法有</p><ol><li><code>length()</code>返回字符串长度</li><li><code>toString()</code>将 StringBuilder 转换为 String</li><li><code>append()</code>添加数据，并返回</li><li><code>reverse()</code>反转字符串<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">    System.out.println(stringBuilder.length());  </span><br><span class="line">    System.out.println(stringBuilder.append(<span class="string">&quot;qwer&quot;</span>));  </span><br><span class="line">    System.out.println(stringBuilder);  </span><br><span class="line">  </span><br><span class="line">    System.out.println(stringBuilder.reverse());  </span><br><span class="line">  </span><br><span class="line">    System.out.println(stringBuilder.toString());  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="6-7-3-StringJoiner"><a href="#6-7-3-StringJoiner" class="headerlink" title="6.7.3 StringJoiner"></a>6.7.3 StringJoiner</h4><p>可以看作一个容器，<strong>创建后内容可变</strong></p><ol><li>直接在创建对象时填入参数<code>(间隔符, 开始符号, 结束符号)</code></li><li><code>add()</code>添加数据，返回自身<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">StringJoiner</span> <span class="variable">stringJoiner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;**&quot;</span>, <span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>);  </span><br><span class="line">    stringJoiner.add(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">    stringJoiner.add(<span class="string">&quot;qwer&quot;</span>);  </span><br><span class="line">    stringJoiner.add(<span class="string">&quot;zxcv&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    System.out.println(stringJoiner);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-泛型"><a href="#7-泛型" class="headerlink" title="7 泛型"></a>7 泛型</h2><p>适用于多种数据结构的数据执行相同的代码（代码复用）</p><p>不使用泛型写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(add(<span class="number">1</span>,<span class="number">2</span>));  </span><br><span class="line">    System.out.println(add(<span class="number">1.2</span>, <span class="number">2.3</span>));  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span> <span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> num1 + num2;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span> <span class="params">(<span class="type">double</span> num1, <span class="type">double</span> num2)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> num1 + num2;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用泛型写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    System.out.println(add(<span class="number">1</span>,<span class="number">2</span>));  </span><br><span class="line">    System.out.println(add(<span class="number">1.2</span>, <span class="number">2.3</span>));  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Number</span>&gt; <span class="type">double</span> <span class="title function_">add</span><span class="params">(T num1, T num2)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span>  num1.doubleValue() + num2.doubleValue();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-1-泛型类"><a href="#7-1-泛型类" class="headerlink" title="7.1 泛型类"></a>7.1 泛型类</h3><p>简单泛型类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line"><span class="comment">//        制定 T 为 String        test&lt;String&gt; test1 = new test&lt;String&gt;();  </span></span><br><span class="line">        test1.setTest(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">        System.out.println(test1.getTest());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">test</span>&lt;T&gt; &#123;  </span><br><span class="line"><span class="comment">//        变量类型由外部制定  </span></span><br><span class="line">        <span class="keyword">private</span> T test;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> T <span class="title function_">getTest</span><span class="params">()</span> &#123;  </span><br><span class="line">            <span class="keyword">return</span> test;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTest</span><span class="params">(T test)</span> &#123;  </span><br><span class="line">            <span class="built_in">this</span>.test = test;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>多元泛类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line"><span class="comment">//        制定 T 为 String        test&lt;String, Integer&gt; test1 = new test&lt;String, Integer&gt;();  </span></span><br><span class="line">        test1.setTest(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">        test1.setTest2(<span class="number">123</span>);  </span><br><span class="line">        System.out.println(test1.getTest());  </span><br><span class="line">        System.out.println(test1.getTest2());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">test</span>&lt;T, K&gt; &#123;  </span><br><span class="line"><span class="comment">//        变量类型由外部制定  </span></span><br><span class="line">        <span class="keyword">private</span> T test;  </span><br><span class="line">        <span class="keyword">private</span> K test2;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> T <span class="title function_">getTest</span><span class="params">()</span> &#123;  </span><br><span class="line">            <span class="keyword">return</span> test;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTest</span><span class="params">(T test)</span> &#123;  </span><br><span class="line">            <span class="built_in">this</span>.test = test;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> K <span class="title function_">getTest2</span><span class="params">()</span> &#123;  </span><br><span class="line">            <span class="keyword">return</span> test2;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTest2</span><span class="params">(K test2)</span> &#123;  </span><br><span class="line">            <span class="built_in">this</span>.test2 = test2;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-泛型接口"><a href="#7-2-泛型接口" class="headerlink" title="7.2 泛型接口"></a>7.2 泛型接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">info</span>&lt;T&gt; &#123;  </span><br><span class="line">    T <span class="title function_">show</span><span class="params">()</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">infoImp</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">info</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> T data;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">infoImp</span><span class="params">(T data)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.data = data;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(T data)</span> &#123;  </span><br><span class="line">        <span class="built_in">this</span>.data = data;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">show</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.data;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    infoImp&lt;String&gt; infoImp = <span class="keyword">new</span> <span class="title class_">infoImp</span>&lt;String&gt;(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">    System.out.println(infoImp.show());  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-泛型方法"><a href="#7-3-泛型方法" class="headerlink" title="7.3 泛型方法"></a>7.3 泛型方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    show(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(T t)</span> &#123;  </span><br><span class="line">    System.out.println(t);  </span><br><span class="line">    <span class="keyword">if</span> (t <span class="keyword">instanceof</span> String) System.out.println(<span class="string">&quot;string&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-通配符"><a href="#7-4-通配符" class="headerlink" title="7.4 通配符"></a>7.4 通配符</h3><p>使用<code>&lt;?&gt;</code>表示，不需要定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    ArrayList&lt;String&gt; arr1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();  </span><br><span class="line">    ArrayList&lt;Integer&gt; arr2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();  </span><br><span class="line">  </span><br><span class="line">    arr1.add(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">    arr1.add(<span class="string">&quot;qwer&quot;</span>);  </span><br><span class="line">    arr1.add(<span class="string">&quot;zxcv&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    arr2.add(<span class="number">12</span>);  </span><br><span class="line">    arr2.add(<span class="number">13</span>);  </span><br><span class="line">    arr2.add(<span class="number">14</span>);  </span><br><span class="line">  </span><br><span class="line">    info(arr1);  </span><br><span class="line">    info(arr2);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">(ArrayList&lt;?&gt; arr)</span> &#123;  </span><br><span class="line">    System.out.println(arr.get(<span class="number">0</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-泛型上下限"><a href="#7-4-泛型上下限" class="headerlink" title="7.4 泛型上下限"></a>7.4 泛型上下限</h3><p>为了解决泛型中隐含的转换问题，<br><code>&lt;? extends A&gt;</code>上限，此类型的子类<br><code>&lt;? super B&gt;</code>下限，此类型的父类</p><h2 id="8-集合"><a href="#8-集合" class="headerlink" title="8 集合"></a>8 集合</h2><h3 id="8-1-1-单列集合-collection"><a href="#8-1-1-单列集合-collection" class="headerlink" title="8.1.1 单列集合 collection"></a>8.1.1 单列集合 collection</h3><h4 id="8-1-1-1-List"><a href="#8-1-1-1-List" class="headerlink" title="8.1.1.1 List"></a>8.1.1.1 List</h4><p>添加元素是<strong>有序</strong>，<strong>可重复</strong>，<strong>有索引</strong></p><h5 id="8-1-1-1-1-ArrayList"><a href="#8-1-1-1-1-ArrayList" class="headerlink" title="8.1.1.1.1 ArrayList"></a>8.1.1.1.1 ArrayList</h5><p><code>ArrayList</code> 代表的是集合类，集合是一种容器，类似于数组，<strong>大小动态变化</strong>，而且其中的元素类型也是动态的。</p><blockquote><p>数组更适合数据个数和类型确定的场景，而集合则更适合数据个数不确定，且需要做增删元素的场景。</p></blockquote><ol><li><code>size()</code>返回元素个数</li><li><code>get(index)</code>返回对应索引的元素</li><li><code>add(index, data)</code>在 index 的位置添加元素，可以不写默认在默认添加</li><li><code>remove(index/data)</code><ol><li>写入index删除index位置的元素<strong>并返回被删除的元素</strong></li><li>写入data删除指定data元素并<strong>返回是否删除成功</strong></li></ol></li><li><code>set(index, data)</code>修改制定index位置的元素</li></ol><p>元素遍历，一般使用for或者迭代器、</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// add  </span></span><br><span class="line">    arrayList.add(<span class="string">&quot;asdf&quot;</span>);  </span><br><span class="line">    arrayList.add(<span class="string">&quot;qwer&quot;</span>);  </span><br><span class="line">    arrayList.add(<span class="string">&quot;zxcv&quot;</span>);  </span><br><span class="line">    System.out.println(arrayList);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// size()  </span></span><br><span class="line">    System.out.println(arrayList.size());  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// get()  </span></span><br><span class="line">    System.out.println(arrayList.get(<span class="number">0</span>));  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// set()  </span></span><br><span class="line">    arrayList.set(<span class="number">2</span>, <span class="string">&quot;test&quot;</span>);  </span><br><span class="line">    System.out.println(arrayList.get(<span class="number">2</span>));  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//remove  </span></span><br><span class="line">    <span class="comment">// 返回被删除的元素  </span></span><br><span class="line">    System.out.println(arrayList.remove(<span class="number">1</span>));  </span><br><span class="line">    System.out.println(arrayList);  </span><br><span class="line">    <span class="comment">// 返回布尔值  </span></span><br><span class="line">    System.out.println(arrayList.remove(<span class="string">&quot;test&quot;</span>));  </span><br><span class="line">    System.out.println(arrayList);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 元素遍历  </span></span><br><span class="line">    arrayList.add(<span class="string">&quot;qwer&quot;</span>);  </span><br><span class="line">    arrayList.add(<span class="string">&quot;zxcv&quot;</span>);  </span><br><span class="line">    arrayList.add(<span class="string">&quot;test&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrayList.size(); i++) &#123;  </span><br><span class="line">        System.out.println(arrayList.get(i));  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;*******************************&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (String item : arrayList) &#123;  </span><br><span class="line">        System.out.println(item);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;*******************************&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> arrayList.iterator(); iterator.hasNext(); ) &#123;  </span><br><span class="line">        System.out.println(iterator.next());  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-1-1-1-2-LinkedList"><a href="#8-1-1-1-2-LinkedList" class="headerlink" title="8.1.1.1.2 LinkedList"></a>8.1.1.1.2 LinkedList</h5><h4 id="8-1-1-2-Set"><a href="#8-1-1-2-Set" class="headerlink" title="8.1.1.2 Set"></a>8.1.1.2 Set</h4><p>添加元素是：<strong>无序</strong>，<strong>不重复</strong>，<strong>无索引</strong></p><h4 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h4><p><code>Interator</code>是集合遍历元素的方式，常用的方法有：</p><ol><li><code>hasNext</code>判断当前位置是否有元素，有返回<code>true</code></li><li><code>next</code>获取当前位置的元素，并且把迭代器对象移动到下一个元素的位置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    Collection&lt;String&gt; coll = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();  </span><br><span class="line">    coll.add(<span class="string">&quot;aaa&quot;</span>);  </span><br><span class="line">    coll.add(<span class="string">&quot;bbb&quot;</span>);  </span><br><span class="line">    coll.add(<span class="string">&quot;ccc&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    Iterator&lt;String&gt; iterator = coll.iterator();  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123;  </span><br><span class="line">        <span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> iterator.next();  </span><br><span class="line">        System.out.println(string);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (String string : coll) &#123;  </span><br><span class="line">        System.out.println(string);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">    coll.forEach(<span class="keyword">new</span> <span class="title class_">Consumer</span>&lt;String&gt;() &#123;  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">accept</span><span class="params">(String string)</span> &#123;  </span><br><span class="line">            System.out.println(string);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;);  </span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);  </span><br><span class="line">      </span><br><span class="line">    coll.forEach(s -&gt; System.out.println(s));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li>遍历完后指针<strong>不会复位</strong></li><li>遍历时，不能用集合的方法增加或者删除，使用迭代器自带的<code>remove()</code></li></ol></blockquote><h3 id="8-1-2-双列集合"><a href="#8-1-2-双列集合" class="headerlink" title="8.1.2 双列集合"></a>8.1.2 双列集合</h3><h2 id="9-注解"><a href="#9-注解" class="headerlink" title="9 注解"></a>9 注解</h2><p>注解的常见分类：</p><ul><li>java自带的标准注解</li><li>元注解，用于定义注解的注解</li><li>自定义注解</li></ul><h3 id="9-1-java自带注解"><a href="#9-1-java自带注解" class="headerlink" title="9.1 java自带注解"></a>9.1 java自带注解</h3><p><code>@Override</code>方法，当前方法覆盖父类方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">    <span class="type">test2</span> <span class="variable">test3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">test2</span>();  </span><br><span class="line">    test3.test();  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">test2</span> <span class="keyword">extends</span> <span class="title class_">test1</span> &#123;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;test2 fun&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>@Deprecated</code>表示代码不推荐使用，代码编译器将会发出警告<br><code>@SuppressWarnings(value)</code>关闭编译器警告</p><h3 id="9-2-元注解"><a href="#9-2-元注解" class="headerlink" title="9.2 元注解"></a>9.2 元注解</h3><p><code>@Target</code>注解的适用范围<br><code>@Retention</code>彼岸是在生么级别保存该注解信息，注解的生命周期（SOURCE（源码） &gt; CLASS &gt; RUNTIME（运行时））<br><code>@Document</code>表示是否生成在 javadoc 中<br><code>@Inherited</code>子类可以继承父类的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">@Target(value = ElementType.METHOD)</span>  </span><br><span class="line"><span class="meta">@Retention(value = RetentionPolicy.RUNTIME)</span>  </span><br><span class="line"><span class="meta">@Documented</span>  </span><br><span class="line"><span class="meta">@Inherited</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">        test();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="meta">@MyAnnotation</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;test&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-3-自定义注解"><a href="#9-3-自定义注解" class="headerlink" title="9.3 自定义注解"></a>9.3 自定义注解</h3><p>使用<code>@interface</code>来自定义注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(value = ElementType.METHOD)</span>  </span><br><span class="line"><span class="meta">@Retention(value = RetentionPolicy.RUNTIME)</span>  </span><br><span class="line"><span class="meta">@Documented</span>  </span><br><span class="line"><span class="meta">@Inherited</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation &#123;  </span><br><span class="line"><span class="comment">//    注解的参数：注解类型 参数名  </span></span><br><span class="line"><span class="comment">//    default 默认值  </span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-集合"><a href="#10-集合" class="headerlink" title="10 集合"></a>10 集合</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Java笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始写博客了</title>
      <link href="/2024/05/11/%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86/"/>
      <url>/2024/05/11/%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<h2 id="开始写博客了"><a href="#开始写博客了" class="headerlink" title="开始写博客了"></a>开始写博客了</h2><p>闲的没事干，于是打算建个博客玩玩。<br>有后端的那种需要租服务器，没有多余的钱就搭建个简单的静态页面玩玩<br>评论我不打算现在搞，因为有些麻烦，打算以后有更多的时间了在搞<br>看我能坚持写多久了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客日志 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
